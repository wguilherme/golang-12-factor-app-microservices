# Simple Dockerfile for Go Workspace Monorepo
ARG APP=worker_flow
ARG PORT=8080

# Development stage
FROM golang:1.24-alpine3.20 AS development
ARG APP
WORKDIR /workspace

# Install basic tools
RUN apk --no-cache add ca-certificates git make

# Copy workspace files
COPY go.work go.work.sum* ./
COPY shared/ ./shared/
COPY services/ ./services/
COPY tools/ ./tools/

# Sync workspace
RUN go work sync

# Install development tools
RUN go install github.com/go-delve/delve/cmd/dlv@latest && \
    go install github.com/air-verse/air@latest

# Expose debug port
EXPOSE 2345

# Working directory for development 
WORKDIR /workspace

# The source code will be mounted via volume
# Air will be started via docker-compose command

# Production build stage
FROM golang:1.24-alpine3.20 AS builder
ARG APP
WORKDIR /workspace

# Install build dependencies
RUN apk --no-cache add ca-certificates git

# Copy source
COPY go.work go.work.sum* ./
COPY shared/ ./shared/
COPY services/ ./services/
COPY tools/ ./tools/

# Build
RUN go work sync && \
    cd services/${APP} && \
    CGO_ENABLED=0 GOOS=linux go build -ldflags="-s -w" -o /app/service .

# Production stage
FROM gcr.io/distroless/static:nonroot AS production
ARG APP
ARG PORT

COPY --from=builder /app/service /app/service

EXPOSE ${PORT}
USER 65532:65532

ENTRYPOINT ["/app/service"]